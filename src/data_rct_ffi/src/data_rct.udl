namespace DataRCT {
    string get_ble_service_uuid();
    string get_ble_characteristic_uuid();
};

dictionary Device {
    string id;
    string name;
    i32 device_type;
};

[Error]
enum TransmissionSetupError {
    "UnableToStartTcpServer"
};

[Error]
enum DiscoverySetupError {
    "UnableToSetupUdp",
    "UnableToSetupMdns"
};

callback interface DeviceListUpdateDelegate {
    void device_added(Device value);
    void device_removed(string device_id);
};

interface NativeStream {
    constructor(NativeStreamDelegate delegate);
    void fill_buffer(bytes data);
};

callback interface BleServerImplementationDelegate {
    void start_server();
    void stop_server();
};

dictionary BluetoothLeConnectionInfo {
    string uuid;
    u32 psm;
};

dictionary TcpConnectionInfo {
    string hostname;
    u32 port;
};

interface ConnectionRequest {
};

callback interface NearbyConnectionDelegate {
    void received_connection_request(ConnectionRequest request);
};

callback interface L2CAPClientDelegate {
    NativeStream? open_l2cap_connection(string peripheral_uuid, u32 psm);
};

callback interface BleDiscoveryImplementationDelegate {
    void start_scanning();
    void stop_scanning();
};

interface InternalDiscovery {
    [Throws=DiscoverySetupError]
    constructor(DeviceListUpdateDelegate? delegate);
    void add_ble_implementation(BleDiscoveryImplementationDelegate implementation);
    void start();
    void stop();
    void parse_discovery_message(bytes data, string? ble_uuid);
};

callback interface NativeStreamDelegate {
    u64 write(bytes data);
    void close();
};
